% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_gnm_graph.R
\name{add_gnm_graph}
\alias{add_gnm_graph}
\title{Add a G(n, m) Erdos-Renyi graph}
\usage{
add_gnm_graph(graph, n, m, loops = FALSE, set_seed = NULL)
}
\arguments{
\item{graph}{a graph object of class
\code{dgr_graph}.}

\item{n}{the number of nodes comprising the
generated graph.}

\item{m}{the number of edges in the
generated graph.}

\item{loops}{a logical value (default is
\code{FALSE}) that governs whether loops are
allowed to be created.}

\item{set_seed}{supplying a value sets a random seed
of the \code{Mersenne-Twister} implementation.}
}
\description{
To an existing graph object, add
a graph built according to the Erdos-Renyi
G(n, m) model. This uses the same constant
probability when creating the fixed number
of edges. Thus for \code{n} nodes there will
be \code{m} edges and, if loops is set as
\code{TRUE}, then random loop edges will be
part of \code{m}.
}
\examples{
# Create an undirected GNM
# graph with 100 nodes and
# 120 edges
gnm_graph <-
  create_graph(
    directed = FALSE) \%>\%
  add_gnm_graph(
    n = 100,
    m = 120)

# Get a count of nodes
gnm_graph \%>\% node_count()
#> [1] 100

# Get a count of edges
gnm_graph \%>\% edge_count()
#> [1] 120
}
