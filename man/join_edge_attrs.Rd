% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_edge_attrs.R
\name{join_edge_attrs}
\alias{join_edge_attrs}
\title{Join new edge attribute values using a data frame}
\usage{
join_edge_attrs(graph, df)
}
\arguments{
\item{graph}{a graph object of class}

\item{df}{the data frame to use for joining.
\code{dgr_graph} that is created using
\code{create_graph}.}
}
\value{
a graph object of class
\code{dgr_graph}.
}
\description{
Join new edge attribute values in a
left join using a data frame. The data frame to join
should have at least one column with a name
identical to a column in the graph's edge data frame
(e.g., \code{rel} in both to join on the edge
\code{rel} values). The use of a left join in this
function means that there is no possibility that
edges in the graph might be removed after the join.
}
\examples{
\dontrun{
library(magrittr)

# Create a simple graph
graph <-
  create_graph() \%>\%
  add_n_nodes(5) \%>\%
  add_edges("1->2 1->3 2->4 2->5 3->5")

# Create a data frame with node ID values
# representing the graph edges (with `from` and `to`
# columns), and, a set of numeric values
df <-
  data.frame(from = c(1, 1, 2, 2, 3),
             to = c(2, 3, 4, 5, 5),
             values = rnorm(5, 5))

# Join the values in the data frame to the
# graph's edges; this works as a left join using
# identically-named columns in the graph and the df
# (in this case `from` and `to` are common to both)
graph <-
  graph \%>\% join_edge_attrs(df)

# Get the graph's internal edf to show that the
# join has been made
get_edge_df(graph)
#>   from to rel           values
#> 1    1  2     7.13009924330664
#> 2    1  3     4.91228554626235
#> 3    2  4     3.53310530960626
#> 4    2  5      5.6516614809259
#> 5    3  5     5.87955663602654
}
}

