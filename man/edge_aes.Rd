% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edge_aes.R
\name{edge_aes}
\alias{edge_aes}
\title{Insert edge aesthetic attributes during edge creation}
\usage{
edge_aes(style = NULL, penwidth = NULL, color = NULL, arrowsize = NULL,
  arrowhead = NULL, arrowtail = NULL, fontname = NULL, fontsize = NULL,
  fontcolor = NULL, len = NULL, minlen = NULL, tooltip = NULL,
  URL = NULL, layer = NULL, label = NULL, labelfontname = NULL,
  labelfontsize = NULL, labelfontcolor = NULL, labelangle = NULL,
  labeldistance = NULL, labelfloat = NULL, labeltooltip = NULL,
  labelhref = NULL, labelURL = NULL, labeltarget = NULL,
  edgetooltip = NULL, edgehref = NULL, edgeURL = NULL,
  edgetarget = NULL, dir = NULL, headtooltip = NULL, headhref = NULL,
  headURL = NULL, headtarget = NULL, headclip = NULL, headlabel = NULL,
  headport = NULL, tailtooltip = NULL, tailhref = NULL, tailURL = NULL,
  tailtarget = NULL, tailclip = NULL, taillabel = NULL, tailport = NULL,
  target = NULL, weight = NULL, constraint = NULL, decorate = NULL,
  href = NULL, lhead = NULL, ltail = NULL, samehead = NULL,
  sametail = NULL)
}
\arguments{
\item{style}{the edge line style. The
\code{style} types that can be used are
\code{solid}, \code{bold}, \code{dashed},
\code{dotted}, and \code{invisible}.}

\item{penwidth}{the thickness of the stroke
line for the edge itself.}

\item{color}{the color of the edge. Can be
an X11 color or a hexadecimal color code.}

\item{arrowsize}{a scaling factor for
arrowheads. The default value is \code{1.0}
and the minimum is \code{0}.}

\item{arrowhead}{the type of arrowhead to use.
The \code{style} attribute can either any of
these types: \code{normal}, \code{vee},
\code{tee}, \code{dot}, \code{diamond},
\code{box}, \code{curve}, \code{icurve},
\code{inv}, \code{crow}, or \code{none}.}

\item{arrowtail}{the type of arrowtail to use.
The \code{style} attribute can either any of
these types: \code{normal}, \code{vee},
\code{tee}, \code{dot}, \code{diamond},
\code{box}, \code{curve}, \code{icurve},
\code{inv}, \code{crow}, or \code{none}.}

\item{fontname}{the name of the
system font that will be used for any edge
text.}

\item{fontsize}{the point size of
the font used for any edge text.}

\item{fontcolor}{the color used
for any edge text. Can be an X11 color or a
hexadecimal color code.}

\item{len}{len}

\item{minlen}{minlen}

\item{tooltip}{text for an edge tooltip.}

\item{URL}{a URL to associate with an edge.
Upon rendering the plot, clicking edges
with any associated URLs will open the
URL in the default browser.}

\item{layer}{layer}

\item{label}{the label text associated
with the edge.}

\item{labelfontname}{the name of the
system font that will be used for the
\code{headlabel} and the
\code{taillabel} label text. If not
set, the \code{fontname} value will
instead be used.}

\item{labelfontsize}{the point size of
the font used for the \code{headlabel}
and the \code{taillabel} label text.
If not set, the \code{fontsize} value
will instead be used.}

\item{labelfontcolor}{the color used
for the label text of the
\code{headlabel} and the
\code{taillabel} label text. If not
set, the \code{fontcolor} value will
instead be used. Can be an X11 color
or a hexadecimal color code.}

\item{labelangle}{when used along with
\code{labeldistance} edge attribute,
determines where the \code{headlabel}
(or \code{taillabel}) are placed with
respect to the edge's head (or tail)
using polar coordinates. The origin for
the coordinate system is the point
where the edge touches the node. Now
imagine a ray (of \code{0} degrees)
moving from the origin back along the
edge, parallel to the edge at the origin.
The angle, in degrees, specifies the
rotation from the \code{0} degree ray,
with positive angles moving
counterclockwise and negative angles
moving clockwise.}

\item{labeldistance}{a scaling factor
that adjusts the distance of the
\code{headlabel} (or, \code{taillabel})
from the head (or tail) node. Consider
that the distance is normally 10 points.
Any value of \code{labeldistance} will
effectively multiply that distance
value. The default value is \code{1.0}
and the minimum is \code{0}.}

\item{labelfloat}{if set to \code{TRUE},
this option allows edge labels to be less
constrained in position. That is, edge
labels may appear on top of other edges.
The default here is \code{FALSE}.}

\item{labeltooltip}{labeltooltip}

\item{labelhref}{labelhref}

\item{labelURL}{a URL to associate with
edge label text. Upon rendering the plot,
clicking edge labels with any associated
URLs will open the URL in the default
browser.}

\item{labeltarget}{labeltarget}

\item{edgetooltip}{edgetooltip}

\item{edgehref}{edgehref}

\item{edgeURL}{edgeURL}

\item{edgetarget}{edgetarget}

\item{dir}{an optional direction
type. Normally, for directed
graphs, this is \code{forward}
and needn't be set. For undirected
graphs, this would be \code{none}
and again no explicit setting is
required. However, one can also use
the \code{back} or \code{both}
options. The \code{back} option
draws an arrowhead in the reverse
direction of an edge. The
\code{both} option draws two
arrowheads. When using any of
these options in such an explicit
manner, the \code{head...} and
\code{tail...} edge attributes
allow control over aesthetic edge
attributes in either side of the
edge.}

\item{headtooltip}{headtooltip}

\item{headhref}{headhref}

\item{headURL}{headURL}

\item{headtarget}{headtarget}

\item{headclip}{headclip}

\item{headlabel}{headlabel}

\item{headport}{headport}

\item{tailtooltip}{tailtooltip}

\item{tailhref}{tailhref}

\item{tailURL}{tailURL}

\item{tailtarget}{tailtarget}

\item{tailclip}{tailclip}

\item{taillabel}{taillabel}

\item{tailport}{tailport}

\item{target}{target}

\item{weight}{weight}

\item{constraint}{constraint}

\item{decorate}{decorate}

\item{href}{href}

\item{lhead}{lhead}

\item{ltail}{ltail}

\item{samehead}{samehead}

\item{sametail}{sametail}
}
\description{
This helper function should be
invoked to provide values for the namesake
\code{edge_aes} argument, which is present
in any function where edges are created.
}
\examples{
# Create a new graph and add
# a path with several edge
# aesthetic attributes
graph <-
  create_graph() \%>\%
  add_path(
    n = 3,
    type = "path",
    edge_aes = edge_aes(
      style = "dot",
      color = c("red", "blue")))

# View the graph's internal
# node data frame; the node
# aesthetic attributes have
# been inserted
graph \%>\%
  get_edge_df()
#>   id from to  rel style color
#> 1  1    1  2 <NA>   dot   red
#> 2  2    2  3 <NA>   dot  blue
}
